$date
	Fri Oct 13 15:45:42 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module singlecycle_tb $end
$var reg 1 ! clk $end
$var reg 1 " en $end
$var reg 1 # rst $end
$scope module u_singlecycle $end
$var wire 32 $ address_in [31:0] $end
$var wire 1 % auipc $end
$var wire 1 ! clk $end
$var wire 1 " en $end
$var wire 32 & in [31:0] $end
$var wire 1 # rst $end
$var wire 32 ' wr_out [31:0] $end
$var wire 32 ( wr_in [31:0] $end
$var wire 4 ) wmask [3:0] $end
$var wire 32 * wlout [31:0] $end
$var wire 32 + uj_type [31:0] $end
$var wire 32 , u_type [31:0] $end
$var wire 1 - store $end
$var wire 32 . sb_type [31:0] $end
$var wire 32 / s_type [31:0] $end
$var wire 32 0 res_o [31:0] $end
$var wire 32 1 res [31:0] $end
$var wire 1 2 reg_write $end
$var wire 32 3 out [31:0] $end
$var wire 1 4 operand_b $end
$var wire 1 5 operand_a $end
$var wire 32 6 op_b [31:0] $end
$var wire 32 7 op_a [31:0] $end
$var wire 2 8 mem_reg [1:0] $end
$var wire 1 9 mem_en $end
$var wire 32 : m3out [31:0] $end
$var wire 32 ; m2out [31:0] $end
$var wire 32 < m1out [31:0] $end
$var wire 1 = load $end
$var wire 1 > jalr_i $end
$var wire 1 ? jal $end
$var wire 3 @ imm_sel [2:0] $end
$var wire 32 A i_type [31:0] $end
$var wire 32 B data_out [31:0] $end
$var wire 1 C branch_res $end
$var wire 1 D branch_en $end
$var wire 4 E alu_control [3:0] $end
$var wire 32 F address_out [31:0] $end
$scope module u_adder0 $end
$var wire 32 G a [31:0] $end
$var reg 32 H res [31:0] $end
$upscope $end
$scope module u_alu0 $end
$var wire 4 I op [3:0] $end
$var wire 32 J b [31:0] $end
$var wire 32 K a [31:0] $end
$var reg 32 L res_o [31:0] $end
$upscope $end
$scope module u_branch0 $end
$var wire 3 M func3 [2:0] $end
$var wire 32 N op_b [31:0] $end
$var wire 32 O op_a [31:0] $end
$var wire 1 D branch_en $end
$var reg 1 C res $end
$upscope $end
$scope module u_ctrl_unit0 $end
$var wire 3 P func3 [2:0] $end
$var wire 1 Q func7 $end
$var wire 7 R opcode [6:0] $end
$var wire 1 ? uj $end
$var wire 1 S u_lui $end
$var wire 1 T u_aui $end
$var wire 1 U store $end
$var wire 1 D sb $end
$var wire 1 - s $end
$var wire 1 2 reg_write $end
$var wire 1 V r_type $end
$var wire 1 4 operand_b $end
$var wire 1 5 operand_a $end
$var wire 2 W mem_reg [1:0] $end
$var wire 1 9 mem_en $end
$var wire 1 X lui $end
$var wire 1 Y load $end
$var wire 1 = l $end
$var wire 1 > jalr_i $end
$var wire 1 Z jalr $end
$var wire 1 [ jal $end
$var wire 3 \ imm_sel [2:0] $end
$var wire 1 ] i_type $end
$var wire 1 ^ branch $end
$var wire 1 _ auipc $end
$var wire 4 ` alu_control [3:0] $end
$scope module u_control_decoder0 $end
$var wire 3 a func3 [2:0] $end
$var wire 1 Q func7 $end
$var wire 1 U store $end
$var wire 1 V r_type $end
$var wire 1 X lui $end
$var wire 1 Y load $end
$var wire 1 Z jalr $end
$var wire 1 [ jal $end
$var wire 1 ] i_type $end
$var wire 1 ^ branch $end
$var wire 1 _ auipc $end
$var reg 4 b alu_control [3:0] $end
$var reg 3 c imm_sel [2:0] $end
$var reg 1 > jalr_i $end
$var reg 1 = l $end
$var reg 1 9 mem_en $end
$var reg 2 d mem_reg [1:0] $end
$var reg 1 5 operand_a $end
$var reg 1 4 operand_b $end
$var reg 1 2 reg_write $end
$var reg 1 - s $end
$var reg 1 D sb $end
$var reg 1 T u_aui $end
$var reg 1 S u_lui $end
$var reg 1 ? uj $end
$upscope $end
$scope module u_type_decoder0 $end
$var wire 7 e opcode [6:0] $end
$var reg 1 _ auipc $end
$var reg 1 ^ branch $end
$var reg 1 ] i_type $end
$var reg 1 [ jal $end
$var reg 1 Z jalr $end
$var reg 1 Y load $end
$var reg 1 X lui $end
$var reg 1 V r_type $end
$var reg 1 U store $end
$upscope $end
$upscope $end
$scope module u_datamem0 $end
$var wire 8 f address [7:0] $end
$var wire 1 ! clk $end
$var wire 1 9 mem_en $end
$var wire 4 g mask [3:0] $end
$var wire 32 h datain [31:0] $end
$var reg 32 i dataout [31:0] $end
$upscope $end
$scope module u_imm_gen0 $end
$var wire 32 j inst [31:0] $end
$var reg 32 k branch_imm [31:0] $end
$var reg 12 l i [11:0] $end
$var reg 32 m i_type [31:0] $end
$var reg 32 n jal_imm [31:0] $end
$var reg 12 o s [11:0] $end
$var reg 32 p store [31:0] $end
$var reg 32 q u_imm [31:0] $end
$upscope $end
$scope module u_instruc_mem0 $end
$var wire 8 r address [7:0] $end
$var wire 1 ! clk $end
$var wire 32 s data_in [31:0] $end
$var wire 1 " en $end
$var reg 32 t data_out [31:0] $end
$upscope $end
$scope module u_mux0 $end
$var wire 1 4 sel $end
$var wire 32 u out [31:0] $end
$var wire 32 v b [31:0] $end
$var wire 32 w a [31:0] $end
$upscope $end
$scope module u_mux1 $end
$var wire 32 x a [31:0] $end
$var wire 32 y b [31:0] $end
$var wire 32 z c [31:0] $end
$var wire 32 { d [31:0] $end
$var wire 32 | e [31:0] $end
$var wire 3 } sel [2:0] $end
$var reg 32 ~ out [31:0] $end
$upscope $end
$scope module u_mux10 $end
$var wire 32 !" a [31:0] $end
$var wire 32 "" c [31:0] $end
$var wire 32 #" d [31:0] $end
$var wire 2 $" sel [1:0] $end
$var wire 32 %" b [31:0] $end
$var reg 32 &" out [31:0] $end
$upscope $end
$scope module u_mux3 $end
$var wire 1 5 sel $end
$var wire 32 '" out [31:0] $end
$var wire 32 (" b [31:0] $end
$var wire 32 )" a [31:0] $end
$upscope $end
$scope module u_pc0 $end
$var wire 32 *" address_in [31:0] $end
$var wire 1 % auipc $end
$var wire 32 +" auipc_add [31:0] $end
$var wire 1 D branch $end
$var wire 32 ," branch_add [31:0] $end
$var wire 1 C branch_res $end
$var wire 1 ! clk $end
$var wire 1 ? jal $end
$var wire 32 -" jal_add [31:0] $end
$var wire 1 > jalr $end
$var wire 32 ." jalr_add [31:0] $end
$var wire 1 # rst $end
$var reg 32 /" address_out [31:0] $end
$upscope $end
$scope module u_reg_file0 $end
$var wire 1 ! clk $end
$var wire 1 2 en $end
$var wire 5 0" rd [4:0] $end
$var wire 5 1" rs1 [4:0] $end
$var wire 5 2" rs2 [4:0] $end
$var wire 1 # rst $end
$var wire 32 3" write [31:0] $end
$var wire 32 4" operand_b [31:0] $end
$var wire 32 5" opa [31:0] $end
$var integer 32 6" i [31:0] $end
$upscope $end
$scope module u_wrappermem0 $end
$var wire 2 7" byteadd [1:0] $end
$var wire 32 8" datain [31:0] $end
$var wire 3 9" func3 [2:0] $end
$var wire 1 = load $end
$var wire 32 :" load_in [31:0] $end
$var wire 1 9 mem_en $end
$var reg 32 ;" dataout [31:0] $end
$var reg 32 <" load_out [31:0] $end
$var reg 4 =" masking [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bz *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bz #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bz s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
x_
x^
x]
bx \
x[
xZ
xY
xX
bx W
xV
xU
xT
xS
bx R
xQ
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
xD
xC
bx B
bx A
bx @
x?
x>
x=
bx <
bx ;
bx :
x9
bx 8
bx 7
bx 6
x5
x4
bx 3
x2
bx 1
bx 0
bx /
bx .
x-
bx ,
bx +
bx *
bx )
bx (
bx '
bz &
z%
bz $
1#
0"
0!
$end
#5000
b10 ;
b10 &"
b10 3"
b0 f
b10 7"
b10 0
b10 L
b10 !"
b10 +"
b10 ,"
b10 -"
b10 ."
b10 3
b10 J
b10 u
b10 <
b10 v
b10 ~
b0 :
b0 K
b0 '"
b0 6
b0 N
b0 w
b0 4"
b0 8"
b0 7
b0 O
b0 )"
b0 5"
09
b0 E
b0 I
b0 `
b0 b
b0 8
b0 W
b0 d
b0 $"
b0 @
b0 \
b0 c
b0 }
05
14
0S
0T
0>
0?
0D
0=
0-
12
0X
0_
0Z
0[
0^
0Y
0U
1]
0V
b0 M
b0 9"
b1010 0"
b10 2"
b0 1"
0Q
b0 P
b0 a
b10011 R
b10011 e
b1000000000000000000000 ,
b1000000000000000000000 q
b1000000000000000000000 |
b10 +
b10 n
b10 {
b1010 .
b1010 k
b1010 z
b1010 /
b1010 p
b1010 y
b1010 o
b10 A
b10 m
b10 x
b10 l
b1000000000010100010011 B
b1000000000010100010011 j
b1000000000010100010011 t
b0 r
b100 1
b100 H
b100 ""
b0 F
b0 G
b0 ("
b0 /"
b100000 6"
1!
0#
#10000
0!
#15000
b1 ;
b1 &"
b1 3"
b1 7"
b1 0
b1 L
b1 !"
b1 +"
b1 ,"
b1 -"
b1 ."
b1 3
b1 J
b1 u
b1 <
b1 v
b1 ~
b10 0"
b1 2"
b100000000000000000000 ,
b100000000000000000000 q
b100000000000000000000 |
b100000000000 +
b100000000000 n
b100000000000 {
b10 .
b10 k
b10 z
b10 /
b10 p
b10 y
b10 o
b1 A
b1 m
b1 x
b1 l
b100000000000100010011 B
b100000000000100010011 j
b100000000000100010011 t
b1 r
b1000 1
b1000 H
b1000 ""
b100 F
b100 G
b100 ("
b100 /"
1!
1#
#20000
0!
#25000
b111 f
b0 7"
b1100 ;
b1100 &"
b1100 3"
b1000 :
b1000 K
b1000 '"
b11100 0
b11100 L
b11100 !"
b11100 +"
b11100 ,"
b11100 -"
b11100 ."
b10 8
b10 W
b10 d
b10 $"
b11 @
b11 \
b11 c
b11 }
15
1?
b10100 3
b10100 J
b10100 u
1[
0]
b10100 <
b10100 v
b10100 ~
b1 0"
b10100 2"
b1101111 R
b1101111 e
b1010000000000000000000000 ,
b1010000000000000000000000 q
b1010000000000000000000000 |
b10100 +
b10100 n
b10100 {
b100000000000 .
b100000000000 k
b100000000000 z
b1 /
b1 p
b1 y
b1 o
b10100 A
b10100 m
b10100 x
b10100 l
b1010000000000000011101111 B
b1010000000000000011101111 j
b1010000000000000011101111 t
b10 r
b1100 1
b1100 H
b1100 ""
b1000 F
b1000 G
b1000 ("
b1000 /"
1!
#30000
0!
#35000
b10 7"
b0 8
b0 W
b0 d
b0 $"
05
04
0?
b1 3
b1 J
b1 u
b1 6
b1 N
b1 w
b1 4"
b1 8"
b1 7
b1 O
b1 )"
b1 5"
0[
1V
b10000000000000010 <
b10000000000000010 v
b10000000000000010 ~
b0 f
b100 0"
b10 2"
b10 1"
b110011 R
b110011 e
b1000010000000000000000 ,
b1000010000000000000000 q
b1000010000000000000000 |
b10000000000000010 +
b10000000000000010 n
b10000000000000010 {
b100 .
b100 k
b100 z
b100 /
b100 p
b100 y
b100 o
b10 A
b10 m
b10 x
b10 l
b10 0
b10 L
b10 !"
b10 +"
b10 ,"
b10 -"
b10 ."
b1000010000001000110011 B
b1000010000001000110011 j
b1000010000001000110011 t
b10 ;
b10 &"
b10 3"
b1 :
b1 K
b1 '"
b111 r
b100000 1
b100000 H
b100000 ""
b11100 F
b11100 G
b11100 ("
b11100 /"
1!
#40000
0!
#45000
b1100 ;
b1100 &"
b1100 3"
b11 f
b0 7"
b1100 0
b1100 L
b1100 !"
b1100 +"
b1100 ,"
b1100 -"
b1100 ."
b0 3
b0 J
b0 u
b1100 :
b1100 K
b1100 '"
b0 @
b0 \
b0 c
b0 }
14
1>
b0 6
b0 N
b0 w
b0 4"
b0 8"
b1100 7
b1100 O
b1100 )"
b1100 5"
1Z
0V
b0 <
b0 v
b0 ~
b0 0"
b0 2"
b1 1"
b1100111 R
b1100111 e
b1000000000000000 ,
b1000000000000000 q
b1000000000000000 |
b1000000000000000 +
b1000000000000000 n
b1000000000000000 {
b0 .
b0 k
b0 z
b0 /
b0 p
b0 y
b0 o
b0 A
b0 m
b0 x
b0 l
b1000000001100111 B
b1000000001100111 j
b1000000001100111 t
b1000 r
b100100 1
b100100 H
b100100 ""
b100000 F
b100000 G
b100000 ("
b100000 /"
1!
#50000
0!
#55000
b1001 ;
b1001 &"
b1001 3"
b10 f
b1 7"
b1001 0
b1001 L
b1001 !"
b1001 +"
b1001 ,"
b1001 -"
b1001 ."
b1 :
b1 K
b1 '"
0>
b1000 3
b1000 J
b1000 u
b1 7
b1 O
b1 )"
b1 5"
0Z
1]
b1000 <
b1000 v
b1000 ~
b11 0"
b1000 2"
b10 1"
b10011 R
b10011 e
b100000010000000000000000 ,
b100000010000000000000000 q
b100000010000000000000000 |
b10000000000001000 +
b10000000000001000 n
b10000000000001000 {
b100000000010 .
b100000000010 k
b100000000010 z
b11 /
b11 p
b11 y
b11 o
b1000 A
b1000 m
b1000 x
b1000 l
b100000010000000110010011 B
b100000010000000110010011 j
b100000010000000110010011 t
b11 r
b10000 1
b10000 H
b10000 ""
b1100 F
b1100 G
b1100 ("
b1100 /"
1!
#60000
0!
#65000
b1000000000000 ;
b1000000000000 &"
b1000000000000 3"
b0 f
b0 7"
b1000000000000 0
b1000000000000 L
b1000000000000 !"
b1000000000000 +"
b1000000000000 ,"
b1000000000000 -"
b1000000000000 ."
b0 :
b0 K
b0 '"
b1000000000000 3
b1000000000000 J
b1000000000000 u
b0 7
b0 O
b0 )"
b0 5"
b100 @
b100 \
b100 c
b100 }
1S
1X
0]
b1000000000000 <
b1000000000000 v
b1000000000000 ~
b1 M
b1 9"
b101 0"
b0 2"
b0 1"
b1 P
b1 a
b110111 R
b110111 e
b1000000000000 ,
b1000000000000 q
b1000000000000 |
b1000000000000 +
b1000000000000 n
b1000000000000 {
b100000000100 .
b100000000100 k
b100000000100 z
b101 /
b101 p
b101 y
b101 o
b0 A
b0 m
b0 x
b0 l
b1001010110111 B
b1001010110111 j
b1001010110111 t
b100 r
b10100 1
b10100 H
b10100 ""
b10000 F
b10000 G
b10000 ("
b10000 /"
1!
#70000
0!
#75000
b11000000000000000000010100 ;
b11000000000000000000010100 &"
b11000000000000000000010100 3"
b101 f
b11000000000000000000010100 0
b11000000000000000000010100 L
b11000000000000000000010100 !"
b11000000000000000000010100 +"
b11000000000000000000010100 ,"
b11000000000000000000010100 -"
b11000000000000000000010100 ."
b10100 :
b10100 K
b10100 '"
b11000000000000000000000000 3
b11000000000000000000000000 J
b11000000000000000000000000 u
15
0S
1T
0X
1_
b11000000000000000000000000 <
b11000000000000000000000000 v
b11000000000000000000000000 ~
b0 M
b0 9"
b110 0"
b10000 2"
b0 P
b0 a
b10111 R
b10111 e
b11000000000000000000000000 ,
b11000000000000000000000000 q
b11000000000000000000000000 |
b110000 +
b110000 n
b110000 {
b100110 .
b100110 k
b100110 z
b100110 /
b100110 p
b100110 y
b100110 o
b110000 A
b110000 m
b110000 x
b110000 l
b11000000000000001100010111 B
b11000000000000001100010111 j
b11000000000000001100010111 t
b101 r
b11000 1
b11000 H
b11000 ""
b10100 F
b10100 G
b10100 ("
b10100 /"
1!
#80000
0!
#85000
b1100 3
b1100 J
b1100 u
1C
b10 6
b10 N
b10 w
b10 4"
b10 8"
b1001 7
b1001 O
b1001 )"
b1001 5"
b10 @
b10 \
b10 c
b10 }
0T
1D
02
0_
1^
b1100 <
b1100 v
b1100 ~
b100100 ;
b100100 &"
b100100 3"
b1001 f
b1 M
b1 9"
b1100 0"
b1010 2"
b11 1"
b1 P
b1 a
b1100011 R
b1100011 e
b101000011001000000000000 ,
b101000011001000000000000 q
b101000011001000000000000 |
b11001000000001010 +
b11001000000001010 n
b11001000000001010 {
b1100 .
b1100 k
b1100 z
b1100 /
b1100 p
b1100 y
b1100 o
b1010 A
b1010 m
b1010 x
b1010 l
b100100 0
b100100 L
b100100 !"
b100100 +"
b100100 ,"
b100100 -"
b100100 ."
b101000011001011001100011 B
b101000011001011001100011 j
b101000011001011001100011 t
b11000 :
b11000 K
b11000 '"
b110 r
b11100 1
b11100 H
b11100 ""
b11000 F
b11000 G
b11000 ("
b11000 /"
1!
#90000
0!
#95000
b1 7"
b100 3
b100 J
b100 u
b1001 '
b1001 h
b1001 ;"
b1111 )
b1111 g
b1111 ="
b1001 6
b1001 N
b1001 w
b1001 4"
b1001 8"
b1 7
b1 O
b1 )"
b1 5"
b1 @
b1 \
b1 c
b1 }
19
05
0D
1-
0^
1U
b100 <
b100 v
b100 ~
b101 ;
b101 &"
b101 3"
b1 f
b10 M
b10 9"
b100 0"
b11 2"
b10 1"
b10 P
b10 a
b100011 R
b100011 e
b1100010010000000000000 ,
b1100010010000000000000 q
b1100010010000000000000 |
b10010100000000010 +
b10010100000000010 n
b10010100000000010 {
b100 .
b100 k
b100 z
b100 /
b100 p
b100 y
b100 o
b11 A
b11 m
b11 x
b11 l
b101 0
b101 L
b101 !"
b101 +"
b101 ,"
b101 -"
b101 ."
b1100010010001000100011 B
b1100010010001000100011 j
b1100010010001000100011 t
b1 :
b1 K
b1 '"
b1001 r
b101000 1
b101000 H
b101000 ""
b100100 F
b100100 G
b100100 ("
b100100 /"
1!
#100000
0!
#105000
b1 f
b1 7"
b1001 ;
b1001 &"
b1001 3"
b101 0
b101 L
b101 !"
b101 +"
b101 ,"
b101 -"
b101 ."
b1001 *
b1001 %"
b1001 <"
b1 8
b1 W
b1 d
b1 $"
b0 @
b0 \
b0 c
b0 }
09
1=
0-
12
b100 3
b100 J
b100 u
b10 6
b10 N
b10 w
b10 4"
b10 8"
1Y
0U
b100 <
b100 v
b100 ~
b111 0"
b100 2"
b11 R
b11 e
b10000010010000000000000 ,
b10000010010000000000000 q
b10000010010000000000000 |
b10010000000000100 +
b10010000000000100 n
b10010000000000100 {
b100000000110 .
b100000000110 k
b100000000110 z
b111 /
b111 p
b111 y
b111 o
b100 A
b100 m
b100 x
b100 l
b10000010010001110000011 B
b10000010010001110000011 j
b10000010010001110000011 t
b1001 (
b1001 i
b1001 :"
b1010 r
b101100 1
b101100 H
b101100 ""
b101000 F
b101000 G
b101000 ("
b101000 /"
1!
#110000
0!
#115000
bx (
bx i
bx :"
bx f
bx 7"
bx 0
bx L
bx !"
bx +"
bx ,"
bx -"
bx ."
bx :
bx K
bx '"
bx 3
bx J
bx u
bx 6
bx N
bx w
bx 4"
bx 8"
bx 7
bx O
bx )"
bx 5"
04
0=
02
0Y
bx <
bx v
bx ~
bx M
bx 9"
bx 0"
bx 2"
bx 1"
xQ
bx P
bx a
bx R
bx e
bx000000000000 ,
bx000000000000 q
bx000000000000 |
bx0 +
bx0 n
bx0 {
bx0 .
bx0 k
bx0 z
bx /
bx p
bx y
bx o
bx A
bx m
bx x
bx l
bx B
bx j
bx t
b1011 r
b110000 1
b110000 H
b110000 ""
b101100 F
b101100 G
b101100 ("
b101100 /"
1!
#120000
0!
#125000
b1100 r
b110100 1
b110100 H
b110100 ""
b110000 F
b110000 G
b110000 ("
b110000 /"
1!
#130000
0!
#135000
b1101 r
b111000 1
b111000 H
b111000 ""
b110100 F
b110100 G
b110100 ("
b110100 /"
1!
#140000
0!
#145000
b1110 r
b111100 1
b111100 H
b111100 ""
b111000 F
b111000 G
b111000 ("
b111000 /"
1!
#150000
0!
#155000
b1111 r
b1000000 1
b1000000 H
b1000000 ""
b111100 F
b111100 G
b111100 ("
b111100 /"
1!
