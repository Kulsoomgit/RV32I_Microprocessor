$date
	Thu Nov  2 16:51:27 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module singlecycle_tb $end
$var reg 1 ! clk $end
$var reg 1 " rst $end
$scope module u_5_stages_of_singlecycle $end
$var wire 1 ! clk $end
$var wire 1 # enable $end
$var wire 32 $ instruction [31:0] $end
$var wire 4 % mask [3:0] $end
$var wire 4 & masking [3:0] $end
$var wire 1 ' re_we $end
$var wire 1 ( request $end
$var wire 1 " rst $end
$var wire 32 ) store_dataout [31:0] $end
$var wire 32 * pc_address [31:0] $end
$var wire 32 + load_data_out [31:0] $end
$var wire 32 , instruction_out [31:0] $end
$var wire 1 - datamem_re_we $end
$var wire 1 . data_mem_request $end
$var wire 32 / alu_out_address [31:0] $end
$scope module u_core $end
$var wire 32 0 alu_out_address [31:0] $end
$var wire 1 ! clk $end
$var wire 4 1 mask_singal [3:0] $end
$var wire 4 2 masking [3:0] $end
$var wire 32 3 pc_address [31:0] $end
$var wire 1 ' re_we $end
$var wire 1 ( request $end
$var wire 1 " rst $end
$var wire 32 4 wrap_load_out [31:0] $end
$var wire 32 5 store_dataout [31:0] $end
$var wire 1 6 store $end
$var wire 32 7 rd_wb_data [31:0] $end
$var wire 32 8 pc_address_out [31:0] $end
$var wire 32 9 opb_mux_out [31:0] $end
$var wire 32 : opa_mux_out [31:0] $end
$var wire 32 ; op_b [31:0] $end
$var wire 2 < mem_reg [1:0] $end
$var wire 4 = mask [3:0] $end
$var wire 32 > load_data_in [31:0] $end
$var wire 1 ? load $end
$var wire 1 @ jalr $end
$var wire 1 A jal $end
$var wire 32 B instruction_out [31:0] $end
$var wire 32 C instruction [31:0] $end
$var wire 1 - datamem_re_we $end
$var wire 1 . data_mem_request $end
$var wire 1 D branch_res $end
$var wire 32 E alu_res_out [31:0] $end
$var wire 4 F alu_control [3:0] $end
$var wire 32 G adder_res [31:0] $end
$scope module u_decode0 $end
$var wire 1 ! clk $end
$var wire 32 H opb_data [31:0] $end
$var wire 1 " rst $end
$var wire 32 I u_imm [31:0] $end
$var wire 32 J store_imm [31:0] $end
$var wire 1 6 store $end
$var wire 1 K reg_write $end
$var wire 32 L rd_wb_data [31:0] $end
$var wire 32 M pc_address [31:0] $end
$var wire 1 N operand_b $end
$var wire 1 O operand_a $end
$var wire 32 P opb_mux_out [31:0] $end
$var wire 32 Q opa_mux_out [31:0] $end
$var wire 32 R op_b [31:0] $end
$var wire 32 S op_a [31:0] $end
$var wire 2 T mem_reg [1:0] $end
$var wire 1 U mem_en $end
$var wire 32 V m1out [31:0] $end
$var wire 1 ? load $end
$var wire 1 @ jalr $end
$var wire 32 W jal_imm [31:0] $end
$var wire 1 A jal $end
$var wire 32 X instruction [31:0] $end
$var wire 3 Y imm_sel [2:0] $end
$var wire 32 Z i_type [31:0] $end
$var wire 1 D branch_result $end
$var wire 32 [ branch_imm [31:0] $end
$var wire 1 \ branch $end
$var wire 4 ] alu_control [3:0] $end
$scope module u_branch0 $end
$var wire 3 ^ func3 [2:0] $end
$var wire 32 _ op_b [31:0] $end
$var wire 32 ` op_a [31:0] $end
$var wire 1 \ branch_en $end
$var reg 1 D res $end
$upscope $end
$scope module u_ctrl_unit0 $end
$var wire 3 a func3 [2:0] $end
$var wire 1 b func7 $end
$var wire 7 c opcode [6:0] $end
$var wire 1 A uj $end
$var wire 1 d u_lui $end
$var wire 1 e u_aui $end
$var wire 1 f store $end
$var wire 1 \ sb $end
$var wire 1 6 s $end
$var wire 1 K reg_write $end
$var wire 1 g r_type $end
$var wire 1 N operand_b $end
$var wire 1 O operand_a $end
$var wire 2 h mem_reg [1:0] $end
$var wire 1 U mem_en $end
$var wire 1 i lui $end
$var wire 1 j load $end
$var wire 1 ? l $end
$var wire 1 @ jalr_i $end
$var wire 1 k jalr $end
$var wire 1 l jal $end
$var wire 3 m imm_sel [2:0] $end
$var wire 1 n i_type $end
$var wire 1 o branch $end
$var wire 1 p auipc $end
$var wire 4 q alu_control [3:0] $end
$scope module u_control_decoder0 $end
$var wire 3 r func3 [2:0] $end
$var wire 1 b func7 $end
$var wire 1 f store $end
$var wire 1 g r_type $end
$var wire 1 i lui $end
$var wire 1 j load $end
$var wire 1 k jalr $end
$var wire 1 l jal $end
$var wire 1 n i_type $end
$var wire 1 o branch $end
$var wire 1 p auipc $end
$var reg 4 s alu_control [3:0] $end
$var reg 3 t imm_sel [2:0] $end
$var reg 1 @ jalr_i $end
$var reg 1 ? l $end
$var reg 1 U mem_en $end
$var reg 2 u mem_reg [1:0] $end
$var reg 1 O operand_a $end
$var reg 1 N operand_b $end
$var reg 1 K reg_write $end
$var reg 1 6 s $end
$var reg 1 \ sb $end
$var reg 1 e u_aui $end
$var reg 1 d u_lui $end
$var reg 1 A uj $end
$upscope $end
$scope module u_type_decoder0 $end
$var wire 7 v opcode [6:0] $end
$var reg 1 p auipc $end
$var reg 1 o branch $end
$var reg 1 n i_type $end
$var reg 1 l jal $end
$var reg 1 k jalr $end
$var reg 1 j load $end
$var reg 1 i lui $end
$var reg 1 g r_type $end
$var reg 1 f store $end
$upscope $end
$upscope $end
$scope module u_imm_gen0 $end
$var wire 32 w inst [31:0] $end
$var reg 32 x branch_imm [31:0] $end
$var reg 12 y i [11:0] $end
$var reg 32 z i_type [31:0] $end
$var reg 32 { jal_imm [31:0] $end
$var reg 12 | s [11:0] $end
$var reg 32 } store [31:0] $end
$var reg 32 ~ u_imm [31:0] $end
$upscope $end
$scope module u_mux $end
$var wire 32 !" a [31:0] $end
$var wire 32 "" b [31:0] $end
$var wire 32 #" c [31:0] $end
$var wire 32 $" d [31:0] $end
$var wire 32 %" e [31:0] $end
$var wire 3 &" sel [2:0] $end
$var reg 32 '" out [31:0] $end
$upscope $end
$scope module u_mux1 $end
$var wire 32 (" b [31:0] $end
$var wire 1 N sel $end
$var wire 32 )" out [31:0] $end
$var wire 32 *" a [31:0] $end
$upscope $end
$scope module u_mux2 $end
$var wire 1 O sel $end
$var wire 32 +" out [31:0] $end
$var wire 32 ," b [31:0] $end
$var wire 32 -" a [31:0] $end
$upscope $end
$scope module u_reg_file0 $end
$var wire 1 ! clk $end
$var wire 1 K en $end
$var wire 5 ." rd [4:0] $end
$var wire 5 /" rs1 [4:0] $end
$var wire 5 0" rs2 [4:0] $end
$var wire 1 " rst $end
$var wire 32 1" write [31:0] $end
$var wire 32 2" operand_b [31:0] $end
$var wire 32 3" opa [31:0] $end
$var integer 32 4" i [31:0] $end
$upscope $end
$upscope $end
$scope module u_execute0 $end
$var wire 32 5" a [31:0] $end
$var wire 4 6" alu_control [3:0] $end
$var wire 32 7" b [31:0] $end
$var wire 32 8" pc_address [31:0] $end
$var wire 32 9" alu_res_out [31:0] $end
$var wire 32 :" adder_res [31:0] $end
$scope module u_adder0 $end
$var wire 32 ;" a [31:0] $end
$var reg 32 <" res [31:0] $end
$upscope $end
$scope module u_alu0 $end
$var wire 32 =" a [31:0] $end
$var wire 32 >" b [31:0] $end
$var wire 4 ?" op [3:0] $end
$var reg 32 @" res_o [31:0] $end
$upscope $end
$upscope $end
$scope module u_fetch0 $end
$var wire 32 A" address_in [31:0] $end
$var wire 32 B" branch_add [31:0] $end
$var wire 1 D branch_res $end
$var wire 1 ! clk $end
$var wire 1 A jal $end
$var wire 32 C" jal_add [31:0] $end
$var wire 1 @ jalr $end
$var wire 32 D" jalr_add [31:0] $end
$var wire 4 E" mask [3:0] $end
$var wire 1 ' re_we $end
$var wire 1 ( request $end
$var wire 1 " rst $end
$var wire 32 F" instruction_fetch [31:0] $end
$var wire 32 G" address_out [31:0] $end
$var reg 32 H" instruction [31:0] $end
$scope module u_pc0 $end
$var wire 32 I" address_in [31:0] $end
$var wire 32 J" branch_add [31:0] $end
$var wire 1 D branch_res $end
$var wire 1 ! clk $end
$var wire 1 A jal $end
$var wire 32 K" jal_add [31:0] $end
$var wire 1 @ jalr $end
$var wire 32 L" jalr_add [31:0] $end
$var wire 1 " rst $end
$var reg 32 M" address_out [31:0] $end
$upscope $end
$upscope $end
$scope module u_memory0 $end
$var wire 32 N" alu_out_address [31:0] $end
$var wire 32 O" instruction [31:0] $end
$var wire 1 ? load $end
$var wire 32 P" op_b [31:0] $end
$var wire 1 6 store $end
$var wire 32 Q" wrap_load_out [31:0] $end
$var wire 32 R" wrap_load_in [31:0] $end
$var wire 32 S" store_dataout [31:0] $end
$var wire 4 T" mask [3:0] $end
$var reg 1 - re_we $end
$var reg 1 . request $end
$scope module u_wrappermem0 $end
$var wire 2 U" byteadd [1:0] $end
$var wire 32 V" datain [31:0] $end
$var wire 3 W" func3 [2:0] $end
$var wire 1 ? load $end
$var wire 1 6 mem_en $end
$var wire 32 X" load_in [31:0] $end
$var reg 32 Y" dataout [31:0] $end
$var reg 32 Z" load_out [31:0] $end
$var reg 4 [" mask [3:0] $end
$upscope $end
$upscope $end
$scope module u_writeback0 $end
$var wire 32 \" adder_res [31:0] $end
$var wire 32 ]" alu_out [31:0] $end
$var wire 32 ^" data_mem_out [31:0] $end
$var wire 2 _" mem_reg [1:0] $end
$var wire 32 `" rd_mux_out [31:0] $end
$scope module u_mux10 $end
$var wire 32 a" a [31:0] $end
$var wire 32 b" b [31:0] $end
$var wire 32 c" c [31:0] $end
$var wire 32 d" d [31:0] $end
$var wire 2 e" sel [1:0] $end
$var reg 32 f" out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module u_datamem $end
$var wire 8 g" address [7:0] $end
$var wire 1 ! clk $end
$var wire 32 h" data_in [31:0] $end
$var wire 4 i" mask [3:0] $end
$var wire 1 - re_we $end
$var wire 1 . request $end
$var reg 32 j" data_out [31:0] $end
$var reg 1 k" valid $end
$upscope $end
$scope module u_instruc_mem $end
$var wire 8 l" address [7:0] $end
$var wire 1 ! clk $end
$var wire 32 m" data_in [31:0] $end
$var wire 4 n" mask [3:0] $end
$var wire 1 ' re_we $end
$var wire 1 ( request $end
$var reg 32 o" data_out [31:0] $end
$var reg 1 p" valid $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xp"
bx o"
bz n"
bz m"
bx l"
xk"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bz d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
b0 I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
b0 A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
xp
xo
xn
bx m
xl
xk
xj
xi
bx h
xg
xf
xe
xd
bx c
xb
bx a
bx `
bx _
bx ^
bx ]
x\
bx [
bx Z
bx Y
bx X
bx W
bx V
xU
bx T
bx S
bx R
bx Q
bx P
xO
xN
bx M
bx L
xK
bx J
bx I
bx H
bx G
bx F
bx E
xD
bx C
bx B
xA
x@
x?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
x6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
x-
bx ,
bx +
bx *
bx )
1(
0'
bz &
bx %
bz $
z#
1"
0!
$end
#5000
1p"
1!
#10000
b0 l"
b100 G
b100 :"
b100 <"
b100 \"
b100 c"
b0 *
b0 3
b0 8
b0 M
b0 ,"
b0 8"
b0 ;"
b0 G"
b0 M"
b100000 4"
0!
0"
#15000
b10 U"
b10 7
b10 L
b10 1"
b10 `"
b10 f"
b0 g"
b10 /
b10 0
b10 E
b10 9"
b10 @"
b10 B"
b10 C"
b10 D"
b10 J"
b10 K"
b10 L"
b10 N"
b10 ]"
b10 a"
b10 9
b10 P
b10 )"
b10 7"
b10 >"
b10 V
b10 '"
b10 ("
b0 :
b0 Q
b0 +"
b0 5"
b0 ="
0-
0.
b0 ;
b0 H
b0 P"
b0 V"
b0 R
b0 _
b0 *"
b0 2"
b0 S
b0 `
b0 -"
b0 3"
0U
b0 F
b0 ]
b0 q
b0 s
b0 6"
b0 ?"
b0 <
b0 T
b0 h
b0 u
b0 _"
b0 e"
b0 Y
b0 m
b0 t
b0 &"
0O
1N
0d
0e
0@
0A
0\
0?
06
1K
0i
0p
0k
0l
0o
0j
0f
1n
0g
b0 W"
b1010 ."
b10 0"
b0 /"
0b
b0 a
b0 r
b10011 c
b10011 v
b0 ^
b1000000000000000000000 I
b1000000000000000000000 ~
b1000000000000000000000 %"
b10 W
b10 {
b10 $"
b1010 [
b1010 x
b1010 #"
b1010 J
b1010 }
b1010 ""
b1010 |
b10 Z
b10 z
b10 !"
b10 y
b1000000000010100010011 B
b1000000000010100010011 X
b1000000000010100010011 w
b1000000000010100010011 H"
b1000000000010100010011 O"
b1000000000010100010011 ,
b1000000000010100010011 C
b1000000000010100010011 F"
b1000000000010100010011 o"
b100000 4"
1!
#20000
0!
1"
#25000
b1 l"
b1000 G
b1000 :"
b1000 <"
b1000 \"
b1000 c"
b100 *
b100 3
b100 8
b100 M
b100 ,"
b100 8"
b100 ;"
b100 G"
b100 M"
1!
#30000
0!
#35000
b1 U"
b1 7
b1 L
b1 1"
b1 `"
b1 f"
b1 /
b1 0
b1 E
b1 9"
b1 @"
b1 B"
b1 C"
b1 D"
b1 J"
b1 K"
b1 L"
b1 N"
b1 ]"
b1 a"
b1 9
b1 P
b1 )"
b1 7"
b1 >"
b1 V
b1 '"
b1 ("
b10 ."
b1 0"
b100000000000000000000 I
b100000000000000000000 ~
b100000000000000000000 %"
b100000000000 W
b100000000000 {
b100000000000 $"
b10 [
b10 x
b10 #"
b10 J
b10 }
b10 ""
b10 |
b1 Z
b1 z
b1 !"
b1 y
b10 l"
b1100 G
b1100 :"
b1100 <"
b1100 \"
b1100 c"
b100000000000100010011 B
b100000000000100010011 X
b100000000000100010011 w
b100000000000100010011 H"
b100000000000100010011 O"
b1000 *
b1000 3
b1000 8
b1000 M
b1000 ,"
b1000 8"
b1000 ;"
b1000 G"
b1000 M"
b100000000000100010011 ,
b100000000000100010011 C
b100000000000100010011 F"
b100000000000100010011 o"
1!
#40000
0!
#45000
b0 U"
b1000 g"
b10000 7
b10000 L
b10000 1"
b10000 `"
b10000 f"
b1100 :
b1100 Q
b1100 +"
b1100 5"
b1100 ="
b100000 /
b100000 0
b100000 E
b100000 9"
b100000 @"
b100000 B"
b100000 C"
b100000 D"
b100000 J"
b100000 K"
b100000 L"
b100000 N"
b100000 ]"
b100000 a"
b10 <
b10 T
b10 h
b10 u
b10 _"
b10 e"
b11 Y
b11 m
b11 t
b11 &"
1O
1A
b10100 9
b10100 P
b10100 )"
b10100 7"
b10100 >"
1l
0n
b10100 V
b10100 '"
b10100 ("
b1 ."
b10100 0"
b1101111 c
b1101111 v
b1010000000000000000000000 I
b1010000000000000000000000 ~
b1010000000000000000000000 %"
b10100 W
b10100 {
b10100 $"
b100000000000 [
b100000000000 x
b100000000000 #"
b1 J
b1 }
b1 ""
b1 |
b10100 Z
b10100 z
b10100 !"
b10100 y
b11 l"
b10000 G
b10000 :"
b10000 <"
b10000 \"
b10000 c"
b1010000000000000011101111 B
b1010000000000000011101111 X
b1010000000000000011101111 w
b1010000000000000011101111 H"
b1010000000000000011101111 O"
b1100 *
b1100 3
b1100 8
b1100 M
b1100 ,"
b1100 8"
b1100 ;"
b1100 G"
b1100 M"
b1010000000000000011101111 ,
b1010000000000000011101111 C
b1010000000000000011101111 F"
b1010000000000000011101111 o"
1!
#50000
0!
#55000
b1 U"
b0 <
b0 T
b0 h
b0 u
b0 _"
b0 e"
b0 Y
b0 m
b0 t
b0 &"
0O
0A
b1000 9
b1000 P
b1000 )"
b1000 7"
b1000 >"
b10 g"
b1 S
b1 `
b1 -"
b1 3"
0l
1n
b1000 V
b1000 '"
b1000 ("
b1001 /
b1001 0
b1001 E
b1001 9"
b1001 @"
b1001 B"
b1001 C"
b1001 D"
b1001 J"
b1001 K"
b1001 L"
b1001 N"
b1001 ]"
b1001 a"
b1001 7
b1001 L
b1001 1"
b1001 `"
b1001 f"
b11 ."
b1000 0"
b10 /"
b10011 c
b10011 v
b100000010000000000000000 I
b100000010000000000000000 ~
b100000010000000000000000 %"
b10000000000001000 W
b10000000000001000 {
b10000000000001000 $"
b100000000010 [
b100000000010 x
b100000000010 #"
b11 J
b11 }
b11 ""
b11 |
b1000 Z
b1000 z
b1000 !"
b1000 y
b1 :
b1 Q
b1 +"
b1 5"
b1 ="
b1000 l"
b100100 G
b100100 :"
b100100 <"
b100100 \"
b100100 c"
b100000010000000110010011 B
b100000010000000110010011 X
b100000010000000110010011 w
b100000010000000110010011 H"
b100000010000000110010011 O"
b100000 *
b100000 3
b100000 8
b100000 M
b100000 ,"
b100000 8"
b100000 ;"
b100000 G"
b100000 M"
b100000010000000110010011 ,
b100000010000000110010011 C
b100000010000000110010011 F"
b100000010000000110010011 o"
1!
#60000
0!
#65000
b0 U"
b10000 7
b10000 L
b10000 1"
b10000 `"
b10000 f"
b100 g"
b10000 /
b10000 0
b10000 E
b10000 9"
b10000 @"
b10000 B"
b10000 C"
b10000 D"
b10000 J"
b10000 K"
b10000 L"
b10000 N"
b10000 ]"
b10000 a"
b10000 :
b10000 Q
b10000 +"
b10000 5"
b10000 ="
1@
b0 9
b0 P
b0 )"
b0 7"
b0 >"
b10000 S
b10000 `
b10000 -"
b10000 3"
1k
0n
b0 V
b0 '"
b0 ("
b0 ."
b0 0"
b1 /"
b1100111 c
b1100111 v
b1000000000000000 I
b1000000000000000 ~
b1000000000000000 %"
b1000000000000000 W
b1000000000000000 {
b1000000000000000 $"
b0 [
b0 x
b0 #"
b0 J
b0 }
b0 ""
b0 |
b0 Z
b0 z
b0 !"
b0 y
b1001 l"
b101000 G
b101000 :"
b101000 <"
b101000 \"
b101000 c"
b1000000001100111 B
b1000000001100111 X
b1000000001100111 w
b1000000001100111 H"
b1000000001100111 O"
b100100 *
b100100 3
b100100 8
b100100 M
b100100 ,"
b100100 8"
b100100 ;"
b100100 G"
b100100 M"
b1000000001100111 ,
b1000000001100111 C
b1000000001100111 F"
b1000000001100111 o"
1!
#70000
0!
#75000
b1 U"
b101 7
b101 L
b101 1"
b101 `"
b101 f"
b1 g"
b101 /
b101 0
b101 E
b101 9"
b101 @"
b101 B"
b101 C"
b101 D"
b101 J"
b101 K"
b101 L"
b101 N"
b101 ]"
b101 a"
b1 :
b1 Q
b1 +"
b1 5"
b1 ="
1-
1.
b100 9
b100 P
b100 )"
b100 7"
b100 >"
b1001 )
b1001 5
b1001 S"
b1001 Y"
b1001 h"
b1111 %
b1111 1
b1111 2
b1111 E"
b1111 i"
b1111 =
b1111 T"
b1111 ["
b1001 ;
b1001 H
b1001 P"
b1001 V"
b1001 R
b1001 _
b1001 *"
b1001 2"
b1 S
b1 `
b1 -"
b1 3"
b1 Y
b1 m
b1 t
b1 &"
1U
0@
16
0K
0k
1f
b100 V
b100 '"
b100 ("
b10 W"
b100 ."
b11 0"
b10 /"
b10 a
b10 r
b100011 c
b100011 v
b10 ^
b1100010010000000000000 I
b1100010010000000000000 ~
b1100010010000000000000 %"
b10010100000000010 W
b10010100000000010 {
b10010100000000010 $"
b100 [
b100 x
b100 #"
b100 J
b100 }
b100 ""
b100 |
b11 Z
b11 z
b11 !"
b11 y
b100 l"
b10100 G
b10100 :"
b10100 <"
b10100 \"
b10100 c"
b1100010010001000100011 B
b1100010010001000100011 X
b1100010010001000100011 w
b1100010010001000100011 H"
b1100010010001000100011 O"
b10000 *
b10000 3
b10000 8
b10000 M
b10000 ,"
b10000 8"
b10000 ;"
b10000 G"
b10000 M"
b1100010010001000100011 ,
b1100010010001000100011 C
b1100010010001000100011 F"
b1100010010001000100011 o"
1!
#80000
0!
#85000
b0 U"
b1000000000000 7
b1000000000000 L
b1000000000000 1"
b1000000000000 `"
b1000000000000 f"
b0 g"
b1000000000000 /
b1000000000000 0
b1000000000000 E
b1000000000000 9"
b1000000000000 @"
b1000000000000 B"
b1000000000000 C"
b1000000000000 D"
b1000000000000 J"
b1000000000000 K"
b1000000000000 L"
b1000000000000 N"
b1000000000000 ]"
b1000000000000 a"
b0 :
b0 Q
b0 +"
b0 5"
b0 ="
0-
0.
b1000000000000 9
b1000000000000 P
b1000000000000 )"
b1000000000000 7"
b1000000000000 >"
b0 ;
b0 H
b0 P"
b0 V"
b0 R
b0 _
b0 *"
b0 2"
b0 S
b0 `
b0 -"
b0 3"
b100 Y
b100 m
b100 t
b100 &"
0U
1d
06
1K
1i
0f
b1000000000000 V
b1000000000000 '"
b1000000000000 ("
b1 W"
b101 ."
b0 0"
b0 /"
b1 a
b1 r
b110111 c
b110111 v
b1 ^
b1000000000000 I
b1000000000000 ~
b1000000000000 %"
b1000000000000 W
b1000000000000 {
b1000000000000 $"
b100000000100 [
b100000000100 x
b100000000100 #"
b101 J
b101 }
b101 ""
b101 |
b0 Z
b0 z
b0 !"
b0 y
b101 l"
b11000 G
b11000 :"
b11000 <"
b11000 \"
b11000 c"
b1001010110111 B
b1001010110111 X
b1001010110111 w
b1001010110111 H"
b1001010110111 O"
b10100 *
b10100 3
b10100 8
b10100 M
b10100 ,"
b10100 8"
b10100 ;"
b10100 G"
b10100 M"
b1001010110111 ,
b1001010110111 C
b1001010110111 F"
b1001010110111 o"
0k"
1!
#90000
0!
#95000
b11000000000000000000011000 7
b11000000000000000000011000 L
b11000000000000000000011000 1"
b11000000000000000000011000 `"
b11000000000000000000011000 f"
b110 g"
b11000000000000000000011000 /
b11000000000000000000011000 0
b11000000000000000000011000 E
b11000000000000000000011000 9"
b11000000000000000000011000 @"
b11000000000000000000011000 B"
b11000000000000000000011000 C"
b11000000000000000000011000 D"
b11000000000000000000011000 J"
b11000000000000000000011000 K"
b11000000000000000000011000 L"
b11000000000000000000011000 N"
b11000000000000000000011000 ]"
b11000000000000000000011000 a"
b11000 :
b11000 Q
b11000 +"
b11000 5"
b11000 ="
b11000000000000000000000000 9
b11000000000000000000000000 P
b11000000000000000000000000 )"
b11000000000000000000000000 7"
b11000000000000000000000000 >"
1O
0d
1e
0i
1p
b11000000000000000000000000 V
b11000000000000000000000000 '"
b11000000000000000000000000 ("
b0 W"
b110 ."
b10000 0"
b0 a
b0 r
b10111 c
b10111 v
b0 ^
b11000000000000000000000000 I
b11000000000000000000000000 ~
b11000000000000000000000000 %"
b110000 W
b110000 {
b110000 $"
b100110 [
b100110 x
b100110 #"
b100110 J
b100110 }
b100110 ""
b100110 |
b110000 Z
b110000 z
b110000 !"
b110000 y
b110 l"
b11100 G
b11100 :"
b11100 <"
b11100 \"
b11100 c"
b11000000000000001100010111 B
b11000000000000001100010111 X
b11000000000000001100010111 w
b11000000000000001100010111 H"
b11000000000000001100010111 O"
b11000 *
b11000 3
b11000 8
b11000 M
b11000 ,"
b11000 8"
b11000 ;"
b11000 G"
b11000 M"
b11000000000000001100010111 ,
b11000000000000001100010111 C
b11000000000000001100010111 F"
b11000000000000001100010111 o"
1!
#100000
0!
#105000
1D
b1100 9
b1100 P
b1100 )"
b1100 7"
b1100 >"
b101000 7
b101000 L
b101000 1"
b101000 `"
b101000 f"
b1010 g"
b10 ;
b10 H
b10 P"
b10 V"
b10 R
b10 _
b10 *"
b10 2"
b1001 S
b1001 `
b1001 -"
b1001 3"
b10 Y
b10 m
b10 t
b10 &"
0e
1\
0K
0p
1o
b1100 V
b1100 '"
b1100 ("
b101000 /
b101000 0
b101000 E
b101000 9"
b101000 @"
b101000 B"
b101000 C"
b101000 D"
b101000 J"
b101000 K"
b101000 L"
b101000 N"
b101000 ]"
b101000 a"
b1 W"
b1100 ."
b1010 0"
b11 /"
b1 a
b1 r
b1100011 c
b1100011 v
b1 ^
b101000011001000000000000 I
b101000011001000000000000 ~
b101000011001000000000000 %"
b11001000000001010 W
b11001000000001010 {
b11001000000001010 $"
b1100 [
b1100 x
b1100 #"
b1100 J
b1100 }
b1100 ""
b1100 |
b1010 Z
b1010 z
b1010 !"
b1010 y
b11100 :
b11100 Q
b11100 +"
b11100 5"
b11100 ="
b111 l"
b100000 G
b100000 :"
b100000 <"
b100000 \"
b100000 c"
b101000011001011001100011 B
b101000011001011001100011 X
b101000011001011001100011 w
b101000011001011001100011 H"
b101000011001011001100011 O"
b11100 *
b11100 3
b11100 8
b11100 M
b11100 ,"
b11100 8"
b11100 ;"
b11100 G"
b11100 M"
b101000011001011001100011 ,
b101000011001011001100011 C
b101000011001011001100011 F"
b101000011001011001100011 o"
1!
#110000
0!
#115000
b10 U"
b1 9
b1 P
b1 )"
b1 7"
b1 >"
b10 7
b10 L
b10 1"
b10 `"
b10 f"
b0 g"
b1 ;
b1 H
b1 P"
b1 V"
b1 R
b1 _
b1 *"
b1 2"
b1 S
b1 `
b1 -"
b1 3"
0O
0N
0\
1K
0o
1g
0D
b100 V
b100 '"
b100 ("
b10 /
b10 0
b10 E
b10 9"
b10 @"
b10 B"
b10 C"
b10 D"
b10 J"
b10 K"
b10 L"
b10 N"
b10 ]"
b10 a"
b0 W"
b100 ."
b10 0"
b10 /"
b0 a
b0 r
b110011 c
b110011 v
b0 ^
b1000010000000000000000 I
b1000010000000000000000 ~
b1000010000000000000000 %"
b10000000000000010 W
b10000000000000010 {
b10000000000000010 $"
b100 [
b100 x
b100 #"
b100 J
b100 }
b100 ""
b100 |
b10 Z
b10 z
b10 !"
b10 y
b1 :
b1 Q
b1 +"
b1 5"
b1 ="
b1010 l"
b101100 G
b101100 :"
b101100 <"
b101100 \"
b101100 c"
b1000010000001000110011 B
b1000010000001000110011 X
b1000010000001000110011 w
b1000010000001000110011 H"
b1000010000001000110011 O"
b101000 *
b101000 3
b101000 8
b101000 M
b101000 ,"
b101000 8"
b101000 ;"
b101000 G"
b101000 M"
b1000010000001000110011 ,
b1000010000001000110011 C
b1000010000001000110011 F"
b1000010000001000110011 o"
1!
#120000
0!
#125000
b1 U"
b1 g"
b101 /
b101 0
b101 E
b101 9"
b101 @"
b101 B"
b101 C"
b101 D"
b101 J"
b101 K"
b101 L"
b101 N"
b101 ]"
b101 a"
bx 7
bx L
bx 1"
bx `"
bx f"
b100 9
b100 P
b100 )"
b100 7"
b100 >"
1.
b10 ;
b10 H
b10 P"
b10 V"
b10 R
b10 _
b10 *"
b10 2"
b1 <
b1 T
b1 h
b1 u
b1 _"
b1 e"
b0 Y
b0 m
b0 t
b0 &"
1N
1?
1j
0g
b100 V
b100 '"
b100 ("
b10 W"
b111 ."
b100 0"
b10 a
b10 r
b11 c
b11 v
b10 ^
b10000010010000000000000 I
b10000010010000000000000 ~
b10000010010000000000000 %"
b10010000000000100 W
b10010000000000100 {
b10010000000000100 $"
b100000000110 [
b100000000110 x
b100000000110 #"
b111 J
b111 }
b111 ""
b111 |
b100 Z
b100 z
b100 !"
b100 y
b1011 l"
b110000 G
b110000 :"
b110000 <"
b110000 \"
b110000 c"
b10000010010001110000011 B
b10000010010001110000011 X
b10000010010001110000011 w
b10000010010001110000011 H"
b10000010010001110000011 O"
b101100 *
b101100 3
b101100 8
b101100 M
b101100 ,"
b101100 8"
b101100 ;"
b101100 G"
b101100 M"
b10000010010001110000011 ,
b10000010010001110000011 C
b10000010010001110000011 F"
b10000010010001110000011 o"
1!
#130000
0!
#135000
b0 U"
b100 /
b100 0
b100 E
b100 9"
b100 @"
b100 B"
b100 C"
b100 D"
b100 J"
b100 K"
b100 L"
b100 N"
b100 ]"
b100 a"
b110000 :
b110000 Q
b110000 +"
b110000 5"
b110000 ="
0.
b11111111111111111111111111010100 9
b11111111111111111111111111010100 P
b11111111111111111111111111010100 )"
b11111111111111111111111111010100 7"
b11111111111111111111111111010100 >"
b0 ;
b0 H
b0 P"
b0 V"
b0 R
b0 _
b0 *"
b0 2"
b0 S
b0 `
b0 -"
b0 3"
b10 <
b10 T
b10 h
b10 u
b10 _"
b10 e"
b11 Y
b11 m
b11 t
b11 &"
1O
1A
0?
1l
0j
b11111111111111111111111111010100 V
b11111111111111111111111111010100 '"
b11111111111111111111111111010100 ("
b110100 7
b110100 L
b110100 1"
b110100 `"
b110100 f"
b111 W"
b1 ."
b10101 0"
b11111 /"
1b
b111 a
b111 r
b1101111 c
b1101111 v
b111 ^
b11111101010111111111000000000000 I
b11111101010111111111000000000000 ~
b11111101010111111111000000000000 %"
b11111111111111111111111111010100 W
b11111111111111111111111111010100 {
b11111111111111111111111111010100 $"
b11111111111111111111111111000000 [
b11111111111111111111111111000000 x
b11111111111111111111111111000000 #"
b11111111111111111111111111000001 J
b11111111111111111111111111000001 }
b11111111111111111111111111000001 ""
b111111000001 |
b11111111111111111111111111010101 Z
b11111111111111111111111111010101 z
b11111111111111111111111111010101 !"
b111111010101 y
b1100 l"
b110100 G
b110100 :"
b110100 <"
b110100 \"
b110100 c"
b1001 4
b1001 Q"
b1001 Z"
b1001 ^"
b1001 b"
b11111101010111111111000011101111 B
b11111101010111111111000011101111 X
b11111101010111111111000011101111 w
b11111101010111111111000011101111 H"
b11111101010111111111000011101111 O"
b110000 *
b110000 3
b110000 8
b110000 M
b110000 ,"
b110000 8"
b110000 ;"
b110000 G"
b110000 M"
b1001 +
b1001 >
b1001 R"
b1001 X"
b1001 j"
1k"
b11111101010111111111000011101111 ,
b11111101010111111111000011101111 C
b11111101010111111111000011101111 F"
b11111101010111111111000011101111 o"
1!
#140000
0!
#145000
bx U"
bx 9
bx P
bx )"
bx 7"
bx >"
bx g"
bx ;
bx H
bx P"
bx V"
bx R
bx _
bx *"
bx 2"
bx S
bx `
bx -"
bx 3"
0O
0N
0A
0K
0l
bx0 V
bx0 '"
bx0 ("
bx /
bx 0
bx E
bx 9"
bx @"
bx B"
bx C"
bx D"
bx J"
bx K"
bx L"
bx N"
bx ]"
bx a"
b1000 7
b1000 L
b1000 1"
b1000 `"
b1000 f"
bx W"
bx ."
bx 0"
bx /"
xb
bx a
bx r
bx c
bx v
bx ^
bx000000000000 I
bx000000000000 ~
bx000000000000 %"
bx0 W
bx0 {
bx0 $"
bx0 [
bx0 x
bx0 #"
bx J
bx }
bx ""
bx |
bx Z
bx z
bx !"
bx y
bx :
bx Q
bx +"
bx 5"
bx ="
b1 l"
b1000 G
b1000 :"
b1000 <"
b1000 \"
b1000 c"
bx B
bx X
bx w
bx H"
bx O"
b100 *
b100 3
b100 8
b100 M
b100 ,"
b100 8"
b100 ;"
b100 G"
b100 M"
bx ,
bx C
bx F"
bx o"
1!
#150000
0!
#155000
b1 U"
b0 g"
b1 /
b1 0
b1 E
b1 9"
b1 @"
b1 B"
b1 C"
b1 D"
b1 J"
b1 K"
b1 L"
b1 N"
b1 ]"
b1 a"
b0 :
b0 Q
b0 +"
b0 5"
b0 ="
b1 9
b1 P
b1 )"
b1 7"
b1 >"
b110100 ;
b110100 H
b110100 P"
b110100 V"
b110100 R
b110100 _
b110100 *"
b110100 2"
b0 S
b0 `
b0 -"
b0 3"
b0 <
b0 T
b0 h
b0 u
b0 _"
b0 e"
b0 Y
b0 m
b0 t
b0 &"
1N
1K
1n
b1 V
b1 '"
b1 ("
b1 7
b1 L
b1 1"
b1 `"
b1 f"
b0 W"
b10 ."
b1 0"
b0 /"
0b
b0 a
b0 r
b10011 c
b10011 v
b0 ^
b100000000000000000000 I
b100000000000000000000 ~
b100000000000000000000 %"
b100000000000 W
b100000000000 {
b100000000000 $"
b10 [
b10 x
b10 #"
b10 J
b10 }
b10 ""
b10 |
b1 Z
b1 z
b1 !"
b1 y
b10 l"
b1100 G
b1100 :"
b1100 <"
b1100 \"
b1100 c"
b100000000000100010011 B
b100000000000100010011 X
b100000000000100010011 w
b100000000000100010011 H"
b100000000000100010011 O"
b1000 *
b1000 3
b1000 8
b1000 M
b1000 ,"
b1000 8"
b1000 ;"
b1000 G"
b1000 M"
b100000000000100010011 ,
b100000000000100010011 C
b100000000000100010011 F"
b100000000000100010011 o"
1!
#160000
0!
